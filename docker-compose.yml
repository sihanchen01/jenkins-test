services:
  jenkins:
    image: myjenkins:latest   # <--- your custom image name here
    build: .
    container_name: jenkins-server
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins-config.yaml:/var/jenkins_home/casc_configs/jenkins.yaml:ro
      - ${HOME}/.ssh/ZscalerRootCA.pem:/usr/local/share/ca-certificates/ZscalerRootCA.crt:ro
      - ./plugins.txt:/usr/share/jenkins/ref/plugins.txt:ro
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - CASC_JENKINS_CONFIG=/var/jenkins_home/casc_configs/jenkins.yaml
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy:-}
      - no_proxy=${no_proxy}
    user: root
    networks:
      - jenkins-network
    command: >
      bash -c "
        cp /usr/local/share/ca-certificates/ZscalerRootCA.crt /etc/ssl/certs/ &&
        update-ca-certificates &&
        keytool -import -trustcacerts -keystore /opt/java/openjdk/lib/security/cacerts -storepass changeit -noprompt -alias zscalerrootca -file /usr/local/share/ca-certificates/ZscalerRootCA.crt || true &&
        /usr/bin/tini -- /usr/local/bin/jenkins.sh
      "

  # Optional: Jenkins agent for distributed builds
  jenkins-agent:
    image: jenkins/inbound-agent:latest
    container_name: jenkins-agent
    restart: unless-stopped
    environment:
      - JENKINS_URL=http://jenkins:8080
      - JENKINS_AGENT_NAME=docker-agent
      - JENKINS_SECRET=${jenkins_agent_secret}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins-network
    depends_on:
      - jenkins

volumes:
  jenkins_home:

networks:
  jenkins-network:
    driver: bridge
